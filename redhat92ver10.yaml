---
- name: Clone VM from RHEL 9.2 Template
  hosts: localhost
  gather_facts: no
  collections:
    - community.vmware

  vars:
    vcenter_hostname: "10.200.124.40"
    vcenter_username: "administrator@vsphere.local"
    vcenter_password: "P@ssw0rd"
    validate_certs: no
    datacenter_name: "MCC-IBM3650-Datacenter"
    cluster_name: "MCC-IBM3650-Cluster"
    datastore_name: "MCC-IBM3650-Datacenter"
    network_name: "VLAN-124"

    vm_name: "pud_test_ansible001"
    template_name: "mcc_pudrhel9-template-build"

    # ขั้นต่ำสำหรับ RHEL 9.2
    vm_cpu: 2
    vm_memory: 2048
    vm_disk: 20

    # Network config
    vm_ip: "10.200.124.226"
    vm_netmask: "255.255.254.0"
    vm_gateway: "10.200.124.1"
    vm_dns: ["10.200.9.6"]

    vm_hostname: "pud-test-ansible001"
    vm_root_password: "P@ssw0rd"

    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

  tasks:

    - name: Clone VM from template
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter_name }}"
        cluster: "{{ cluster_name }}"
        datastore: "{{ datastore_name }}"
        folder: "/"
        name: "{{ vm_name }}"
        template: "{{ template_name }}"
        state: poweredon
        hardware:
          memory_mb: "{{ vm_memory }}"
          num_cpus: "{{ vm_cpu }}"
        networks:
          - name: "{{ network_name }}"
            type: static
            ip: "{{ vm_ip }}"
            netmask: "{{ vm_netmask }}"
            gateway: "{{ vm_gateway }}"
            dns_servers: "{{ vm_dns }}"
            device_type: vmxnet3
        disk:
          - size_gb: "{{ vm_disk }}"
            type: thin
            datastore: "{{ datastore_name }}"
        wait_for_ip_address: yes

    - name: Add new VM to inventory
      ansible.builtin.add_host:
        name: "{{ vm_ip }}"
        groups: cloned_vms

    - name: Wait for SSH to become available
      ansible.builtin.wait_for:
        host: "{{ vm_ip }}"
        port: 22
        timeout: 300
        state: started

- name: Configure RHEL 9.2 VM
  hosts: cloned_vms
  gather_facts: yes
  become: yes
  vars:
    ansible_user: root
    ansible_password: "P@ssw0rd"
    ansible_connection: ssh
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

    vm_hostname: "pud-test-ansible001"
    vm_dns: ["10.200.9.6"]

    # Red Hat Subscription Manager credentials
    rhsm_username: "pruchthu@metroconnect.co.th"
    rhsm_password: "P@ssw0rd"

  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ vm_hostname }}"

    - name: Disable firewalld
      ansible.builtin.systemd:
        name: firewalld
        enabled: no
        state: stopped

    - name: Disable SELinux temporarily
      ansible.builtin.command: setenforce 0
      ignore_errors: yes

    - name: Disable SELinux permanently
      ansible.builtin.lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'

    - name: Configure DNS via nmcli
      ansible.builtin.command: >
        nmcli con mod "{{ ansible_default_ipv4.interface }}"
        ipv4.dns "{{ vm_dns[0] }}"
        ipv4.ignore-auto-dns yes
      become: yes

    - name: Restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: restarted

    - name: Reboot the VM
      ansible.builtin.reboot:
        reboot_timeout: 300
        test_command: whoami

    - name: Register RHEL with Red Hat Subscription Manager
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_username }}"
        password: "{{ rhsm_password }}"

